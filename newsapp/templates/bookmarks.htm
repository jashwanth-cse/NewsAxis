{% load static %}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>NewsAxis - Bookmarked Articles</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet"/>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #fff7f0;
            color: #333;
        }

        /* Header Styles */
        .header {
            background: linear-gradient(135deg, #ff7e5f, #feb47b);
            color: white;
            padding: 20px 40px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 1000;
            transition: transform 0.3s ease;
        }

        .header.scrolled {
            transform: translateY(-10px);
        }

        .header-left {
            display: flex;
            align-items: center;
        }

        .header-logo {
            width: 60px;
            height: 60px;
            margin-right: 20px;
            transition: transform 0.3s ease;
        }

        .header-logo:hover {
            transform: scale(1.1);
        }

        .navbar-brand {
            font-size: 2.2rem;
            font-weight: 700;
            color: white;
            text-decoration: none;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
            transition: color 0.3s ease;
        }

        .navbar-brand:hover {
            color: #fff2e6;
        }

        /* Dropdown Styles */
        .dropdown {
            position: relative;
        }

        .dropdown-toggle {
            background: linear-gradient(45deg, #ffca28, #ffb300);
            border: none;
            color: white;
            font-size: 1.1rem;
            font-weight: 500;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 8px;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .dropdown-toggle:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

      .dropdown-menu {
            position: absolute;
            right: 0;
            top: 100%;
            background: linear-gradient(135deg, #ff6b6b, #ff8e53);
            color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            display: none;
            min-width: 180px;
            z-index: 1000;
            animation: slideDown 0.3s ease-in-out;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .dropdown:hover .dropdown-menu {
            display: block;
        }

        .dropdown-menu a {
            display: block;
            padding: 12px 20px;
            text-decoration: none;
            color: #ffffff;
            font-weight: 400;
            transition: background 0.3s ease, padding-left 0.3s ease, color 0.3s ease;
        }

        .dropdown-menu a:hover {
            background: rgba(255, 255, 255, 0.2);
            padding-left: 25px;
            color: #fff2e6;
        }
        }
        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Button Styles */
        .btn-container {
            display: flex;
            gap: 20px;
            align-items: center;
        }

        .btn {
            background: linear-gradient(45deg, #ff6b6b, #ff8e53);
            border: none;
            color: white;
            font-size: 1rem;
            font-weight: 500;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 8px;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .btn-primary {
            background: linear-gradient(45deg, #ff7e5f, #feb47b);
        }

        .btn-outline-light {
            background: transparent;
            border: 1px solid #ffffff;
            color: white;
            transition: background 0.3s ease, color 0.3s ease;
        }

        .btn-outline-light:hover {
            background: #ffffff;
            color: #ff7e5f;
        }

        .btn-remove {
            background: linear-gradient(45deg, #ff3b3b, #d32f2f);
            color: white;
            font-size: 0.9rem;
            padding: 6px 12px;
            border-radius: 6px;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .btn-remove:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        /* News Cards */
        .news-card {
            border: none;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .news-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        }

        .news-card img {
            height: 200px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .news-card:hover img {
            transform: scale(1.05);
        }

        .card-body {
            padding: 20px;
        }

        .card-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #333;
        }

        .card-text {
            font-size: 0.95rem;
            color: #666;
        }

        /* Section Title */
        .section-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: #ff7e5f;
            margin-bottom: 20px;
            position: relative;
            text-align: center;
        }

        .section-title::after {
            content: '';
            width: 80px;
            height: 4px;
            background: linear-gradient(45deg, #ff6b6b, #ff8e53);
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
        }

        /* Footer */
        .footer {
            background: linear-gradient(135deg, #ff7e5f, #feb47b);
            padding: 30px 0;
            color: white;
            text-align: center;
        }

        .footer p {
            margin: 0;
            font-size: 1rem;
        }

        /* Modal */
        .modal-content {
            border-radius: 12px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
            animation: fadeInModal 0.3s ease-in-out;
        }

        @keyframes fadeInModal {
            from { opacity: 0; transform: scale(0.95); }
            to { opacity: 1; transform: scale(1); }
        }

        .modal-header {
            border-bottom: none;
            padding-bottom: 0;
        }

        .modal-title {
            font-weight: 600;
            color: #ff7e5f;
        }

        .form-control {
            border-radius: 8px;
            border: 1px solid #e0e0e0;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

        .form-control:focus {
            border-color: #ff7e5f;
            box-shadow: 0 0 8px rgba(255, 126, 95, 0.2);
        }

        /* Animations */
        .fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header">
        <div class="header-left">
            <img src="{% static 'images/logo.png' %}" alt="Logo" class="header-logo"/>
            <a class="navbar-brand" href="{% url 'home' %}">NewsAxis</a>
        </div>
        <div class="btn-container">
            <div class="dropdown">
                <button class="dropdown-toggle btn">Categories</button>
                <div class="dropdown-menu">
                    <a href="{% url 'category_news' 'politics' %}">Politics</a>
                    <a href="{% url 'category_news' 'technology' %}">Technology</a>
                    <a href="{% url 'category_news' 'health' %}">Health</a>
                    <a href="{% url 'category_news' 'business' %}">Business</a>
                    <a href="{% url 'category_news' 'sports' %}">Sports</a>
                    <a href="{% url 'category_news' 'entertainment' %}">Entertainment</a>
                </div>
            </div>
            <button onclick="getLocation()" class="btn">üìç Nearby News</button>
            <a href="{% url 'country_list' %}" class="btn">Explore</a>
            <!-- Login/Signup Button -->
            <button class="btn btn-primary" id="login-btn" data-bs-toggle="modal" data-bs-target="#authModal">Login/Signup</button>
            <!-- My Account Dropdown -->
            <div class="dropdown" id="account-dropdown" style="display: none;">
                <button class="dropdown-toggle btn" id="account-btn">My Account</button>
                <div class="dropdown-menu">
                    <a href="{% url 'user_articles' %}">Your Articles</a>
                    <a href="{% url 'bookmarks' %}">Bookmarked</a>
                    <a href="#" id="logout-link">Logout</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Bookmarked Articles Section -->
    <div class="container mt-5 fade-in">
        <h2 class="section-title">üìö Your Bookmarked Articles</h2>
        <div class="text-center mb-4">
            <a href="{% url 'home' %}" class="btn btn-primary">Back to Home</a>
        </div>
        <div class="row" id="bookmarked-articles">
            <!-- Articles will be dynamically inserted here -->
        </div>
    </div>

    <!-- Footer -->
    <div class="footer mt-5 py-3 text-center">
        <p>¬© 2025 NewsAxis. All rights reserved.</p>
    </div>

    <!-- Auth Modal -->
    <div class="modal fade" id="authModal" tabindex="-1" aria-labelledby="authModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content p-4">
                <div class="modal-header">
                    <h5 class="modal-title" id="authModalLabel">Login</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="auth-form">
                        <div class="mb-3">
                            <label for="auth-email" class="form-label">Email address</label>
                            <input type="email" class="form-control" id="auth-email" required />
                        </div>
                        <div class="mb-3">
                            <label for="auth-password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="auth-password" required />
                            <div id="auth-error-msg" class="text-danger mt-2 small"></div>
                        </div>
                        <button type="submit" class="btn btn-primary w-100" id="auth-submit-btn">Login</button>
                    </form>
                    <p class="text-center mt-3" id="auth-toggle-text">
                        New user? <a href="#" id="toggle-auth-mode">Signup</a>
                    </p>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-firestore-compat.js"></script>
    <script src="{% static 'js/firebase_config.js' %}"></script>
    <script src="{% static 'js/auth.js' %}"></script>
    <script>
        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(sendLocationToServer, handleLocationError);
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        }

        function sendLocationToServer(position) {
            const lat = position.coords.latitude;
            const lon = position.coords.longitude;
            window.location.href = `/nearby-news/?lat=${lat}&lon=${lon}`;
        }

        function handleLocationError(error) {
            alert("Unable to retrieve your location. Please check browser permissions.");
        }

        // Firebase Auth UI Changes and Bookmark Fetching
        firebase.auth().onAuthStateChanged(user => {
            const loginBtn = document.getElementById('login-btn');
            const accountDropdown = document.getElementById('account-dropdown');
            const logoutLink = document.getElementById('logout-link');
            const bookmarkedArticles = document.getElementById('bookmarked-articles');

            if (user) {
                if (loginBtn) loginBtn.style.display = 'none';
                if (accountDropdown) accountDropdown.style.display = 'inline-block';

                // Fetch bookmarked articles from Firestore
                const db = firebase.firestore();
                db.collection('bookmarks')
                    .doc(user.uid)
                    .collection('articles')
                    .orderBy('timestamp', 'desc')
                    .get()
                    .then(querySnapshot => {
                        bookmarkedArticles.innerHTML = '';
                        if (querySnapshot.empty) {
                            bookmarkedArticles.innerHTML = `
                                <div class="col-12 text-center">
                                    <p>No bookmarked articles yet.</p>
                                    <a href="{% url 'home' %}" class="btn btn-primary">Start Bookmarking</a>
                                </div>`;
                        } else {
                            querySnapshot.forEach(doc => {
                                const article = doc.data();
                                const articleCard = `
                                    <div class="col-md-4 mb-4">
                                        <div class="card news-card">
                                            <img src="${article.image || '{% static 'images/logo.png' %}'}" 
                                                 onerror="this.onerror=null;this.src='{% static 'images/logo.png' %}';" 
                                                 class="card-img-top" alt="News Image">
                                            <div class="card-body">
                                                <h5 class="card-title">${article.title}</h5>
                                                <p class="card-text">${article.description}...</p>
                                                <div class="d-flex gap-2">
                                                    <a href="${article.url}" target="_blank" class="btn btn-outline-primary btn-sm">Read More</a>
                                                    <button class="btn btn-remove btn-sm remove-btn" data-doc-id="${doc.id}">Remove</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                `;
                                bookmarkedArticles.innerHTML += articleCard;
                            });

                            // Add event listeners for remove buttons
                            document.querySelectorAll('.remove-btn').forEach(button => {
                                button.addEventListener('click', () => {
                                    const docId = button.dataset.docId;
                                    db.collection('bookmarks')
                                        .doc(user.uid)
                                        .collection('articles')
                                        .doc(docId)
                                        .delete()
                                        .then(() => {
                                            alert("Article removed from bookmarks!");
                                            // Refresh the list by triggering auth state change
                                            firebase.auth().currentUser.getIdToken(true); // Forces onAuthStateChanged
                                        })
                                        .catch(error => {
                                            console.error("Error removing article: ", error);
                                            alert("Failed to remove article: " + error.message);
                                        });
                                });
                            });
                        }
                    })
                    .catch(error => {
                        console.error("Error fetching bookmarked articles: ", error);
                        bookmarkedArticles.innerHTML = `
                            <div class="col-12 text-center text-danger">
                                <p>Failed to load bookmarked articles. Please try again later.</p>
                            </div>`;
                    });

                if (logoutLink) {
                    logoutLink.onclick = () => {
                        firebase.auth().signOut().then(() => {
                            window.location.href = "{% url 'home' %}"; // Redirect to home after logout
                        });
                    };
                }
            } else {
                if (loginBtn) loginBtn.style.display = 'inline-block';
                if (accountDropdown) accountDropdown.style.display = 'none';
                bookmarkedArticles.innerHTML = `
                    <div class="col-12 text-center">
                        <p>Please log in to view your bookmarked articles.</p>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#authModal">Login/Signup</button>
                    </div>`;
            }
        });

        // Auth JS
        let isSignup = false;

        document.getElementById('toggle-auth-mode').addEventListener('click', function (e) {
            e.preventDefault();
            isSignup = !isSignup;

            document.getElementById('authModalLabel').innerText = isSignup ? "Signup" : "Login";
            document.getElementById('auth-submit-btn').innerText = isSignup ? "Signup" : "Login";
            document.getElementById('auth-error-msg').textContent = '';  // Clear old messages

            this.innerHTML = isSignup
                ? ' <a href="#">Login</a>'
                : ' <a href="#">Signup</a>';
        });

        document.getElementById('auth-form').addEventListener('submit', function (e) {
            e.preventDefault();
            const email = document.getElementById('auth-email').value.trim();
            const password = document.getElementById('auth-password').value.trim();
            const errorMsg = document.getElementById('auth-error-msg');
            errorMsg.textContent = '';

            const auth = firebase.auth();

            const successHandler = () => {
                const modal = bootstrap.Modal.getInstance(document.getElementById('authModal'));
                modal.hide();
                location.reload();
            };

            const errorHandler = (error) => {
                switch (error.code) {
                    case 'auth/user-not-found':
                        errorMsg.textContent = "‚ùå Account not registered. Please signup.";
                        break;
                    case 'auth/wrong-password':
                    case 'auth/invalid-login-credentials':
                        errorMsg.textContent = "‚ùå Incorrect password.";
                        break;
                    case 'auth/email-already-in-use':
                        errorMsg.textContent = "‚ùå Email already registered. Please login.";
                        break;
                    case 'auth/invalid-email':
                        errorMsg.textContent = "‚ùå Invalid email format.";
                        break;
                    case 'auth/weak-password':
                        errorMsg.textContent = "‚ùå Password should be at least 6 characters.";
                        break;
                    default:
                        errorMsg.textContent = "‚ùå " + error.message;
                }
            };

            if (isSignup) {
                auth.createUserWithEmailAndPassword(email, password)
                    .then(successHandler)
                    .catch(errorHandler);
            } else {
                auth.signInWithEmailAndPassword(email, password)
                    .then(successHandler)
                    .catch(errorHandler);
            }
        });

        // Add scroll effect to header
        window.addEventListener('scroll', () => {
            const header = document.querySelector('.header');
            if (window.scrollY > 50) {
                header.classList.add('scrolled');
            } else {
                header.classList.remove('scrolled');
            }
        });
    </script>
</body>
</html>